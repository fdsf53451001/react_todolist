{"version":3,"sources":["reportWebVitals.js","ToDoComponent/ToDoHeader.js","ToDoComponent/ToDoAddForm.js","ToDoComponent/ToDoListChildItem.js","ToDoComponent/ToDoListItem.js","ToDoComponent/ToDoView.js","Controller/ToDoController.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ToDoHeader","props","this","classes","Typography","component","variant","React","Component","withStyles","theme","ToDoAppForm","TextField","id","label","onChange","onAddTextChange","Button","color","onClick","onAddButtonClick","ToDoListChildItem","state","finish","setIcon","bind","onStateClick","setState","ListItem","button","ListItemIcon","ListItemText","primary","useText","ToDoListItem","console","log","MsgArray","getMessageItem","forEach","item","index","array","push","List","aria-label","renderItemProvider","ToDoView","ToDoAddForm","ToDoController","message","temp","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"iLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,+DCERQ,E,kDACF,WAAYC,GAAO,uCACTA,G,qDAEV,c,kCACA,c,oBACA,WACoBC,KAAKD,MAAME,QAC3B,OACI,cAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,2B,GATaC,IAAMC,WAchBC,eAlBG,SAACC,GAAD,MAAY,KAkBfD,CAAsBT,G,kBCb/BW,E,kDACF,WAAYV,GAAO,uCACTA,G,qDAEV,c,kCACA,c,oBACA,WACoBC,KAAKD,MAAME,QAC3B,MACI,CACE,cAACS,EAAA,EAAD,CAAWC,GAAG,WAAWP,QAAQ,WAAWQ,MAAM,YAAYC,SAAUb,KAAKD,MAAMe,kBACnF,cAACC,EAAA,EAAD,CAAQX,QAAQ,WAAWY,MAAM,UAAUC,QAASjB,KAAKD,MAAMmB,iBAA/D,sB,GAXYb,IAAMC,WAiBjBC,eArBG,SAACC,GAAD,MAAY,KAqBfD,CAAsBE,G,sECb/BU,E,kDACF,WAAYpB,GAAO,IAAD,8BACd,cAAMA,IACDqB,MAAQ,CACTC,QAAS,GAEb,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANN,E,qDAQlB,c,kCACA,c,qBAEA,WACI,OAAGvB,KAAKoB,MAAMC,OACF,cAAC,IAAD,IAEJ,cAAC,IAAD,M,0BAGZ,SAAaD,GACTpB,KAAKyB,SAAS,CAACJ,QAAQrB,KAAKoB,MAAMC,W,oBAGtC,WACoBrB,KAAKD,MAAME,QAC3B,OACE,eAACyB,EAAA,EAAD,CAAUC,QAAM,EAACV,QAASjB,KAAKwB,aAA/B,UACE,cAACI,EAAA,EAAD,UACG5B,KAAKsB,YAER,cAACO,EAAA,EAAD,CAAcC,QAAS9B,KAAKD,MAAMgC,iB,GA9Bd1B,IAAMC,WAoCvBC,eAxCG,SAACC,GAAD,MAAY,KAwCfD,CAAsBY,GCvC/Ba,E,kDACF,WAAYjC,GAAO,uCACTA,G,qDAEV,c,kCACA,c,gCAEA,WACEkC,QAAQC,IAAI,UACZ,IAAIC,EAAW,GAIf,OAHAnC,KAAKD,MAAMqC,iBAAiBC,SAAQ,SAASC,EAAMC,EAAOC,GACxDL,EAASM,KAAM,cAAC,EAAD,CAAmBV,QAASO,QAEtCH,I,oBAGT,WACoBnC,KAAKD,MAAME,QAC3B,OACE,cAACyC,EAAA,EAAD,CAAMvC,UAAU,MAAMwC,aAAW,YAAjC,SACG3C,KAAK4C,2B,GApBSvC,IAAMC,WA4BlBC,eAhCG,SAACC,GAAD,MAAY,KAgCfD,CAAsByB,GC5B/Ba,E,kDACF,WAAY9C,GAAO,uCACTA,G,qDAEV,c,kCACA,c,oBACA,WACoBC,KAAKD,MAAME,QAC3B,MACI,CACE,cAAC,EAAD,IACA,cAAC6C,EAAD,CACE5B,iBAAkBlB,KAAKD,MAAMmB,iBAC7BJ,gBAAmBd,KAAKD,MAAMe,kBAEhC,cAAC,EAAD,CAAcsB,eAAgBpC,KAAKD,MAAMqC,sB,GAfhC/B,IAAMC,WAqBdC,eAzBG,SAACC,GAAD,MAAY,KAyBfD,CAAsBsC,GCUtBE,E,kDArCX,WAAYhD,GAAO,IAAD,8BACd,cAAMA,IACDqB,MAAQ,CACT4B,QAAU,GACVC,KAAO,IAEX,EAAK/B,iBAAmB,EAAKA,iBAAiBK,KAAtB,gBACxB,EAAKT,gBAAkB,EAAKA,gBAAgBS,KAArB,gBACvB,EAAKa,eAAiB,EAAKA,eAAeb,KAApB,gBARR,E,qDAUlB,c,kCACA,c,8BAEA,SAAiB2B,GACblD,KAAKoB,MAAM4B,QAAQP,KAAKzC,KAAKoB,MAAM6B,MACnCjD,KAAKyB,SAAS,CAACuB,QAAQhD,KAAKoB,MAAM4B,Y,6BAGtC,SAAgBE,GACZlD,KAAKoB,MAAM6B,KAAOC,EAAMC,OAAOC,Q,4BAGnC,WACI,OAAOpD,KAAKoB,MAAM4B,U,oBAGtB,WACI,OACI,cAAC,EAAD,CACI9B,iBAAoBlB,KAAKkB,iBACzBkB,eAAkBpC,KAAKoC,eACvBtB,gBAAmBd,KAAKc,sB,GAhCXT,IAAMC,WCGnC+C,IAASC,OAIP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BnE,M","file":"static/js/main.a8d577c1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (theme) => ({\r\n\r\n});\r\n\r\nclass ToDoHeader extends React.Component{    \r\n    constructor(props){\r\n        super(props);       \r\n    }\r\n    componentDidMount(){}\r\n    componentWillUnmount(){}\r\n    render(){\r\n        const classes = this.props.classes;\r\n        return(\r\n            <Typography component=\"h3\" variant=\"h3\">ToDo-List</Typography>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ToDoHeader)","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = (theme) => ({\r\n\r\n});\r\n\r\nclass ToDoAppForm extends React.Component{    \r\n    constructor(props){\r\n        super(props);       \r\n    }\r\n    componentDidMount(){}\r\n    componentWillUnmount(){}\r\n    render(){\r\n        const classes = this.props.classes;\r\n        return(\r\n            [\r\n              <TextField id='add_item' variant='outlined' label='Todo-List' onChange={this.props.onAddTextChange}></TextField>,\r\n              <Button variant='outlined' color='primary' onClick={this.props.onAddButtonClick}>Add</Button>\r\n            ]\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ToDoAppForm)","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nconst useStyles = (theme) => ({\r\n\r\n});\r\n\r\nclass ToDoListChildItem extends React.Component{    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            finish : false,\r\n        } \r\n        this.setIcon = this.setIcon.bind(this);\r\n        this.onStateClick = this.onStateClick.bind(this);\r\n    }\r\n    componentDidMount(){}\r\n    componentWillUnmount(){}\r\n\r\n    setIcon(){\r\n        if(this.state.finish){\r\n            return (<DoneIcon/>);\r\n        }\r\n        return (<WarningIcon/>);\r\n    }\r\n\r\n    onStateClick(state){\r\n        this.setState({finish:!this.state.finish});\r\n    }\r\n\r\n    render(){\r\n        const classes = this.props.classes;\r\n        return(          \r\n          <ListItem button onClick={this.onStateClick}>\r\n            <ListItemIcon>\r\n              {this.setIcon()}\r\n            </ListItemIcon>\r\n            <ListItemText primary={this.props.useText}/>\r\n          </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ToDoListChildItem)","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport ToDoListChildItem from './ToDoListChildItem';\r\n\r\nconst useStyles = (theme) => ({\r\n\r\n});\r\n\r\nclass ToDoListItem extends React.Component{    \r\n    constructor(props){\r\n        super(props);       \r\n    }\r\n    componentDidMount(){}\r\n    componentWillUnmount(){}\r\n    // seems this function won't called on update\r\n    renderItemProvider(){\r\n      console.log('update');\r\n      let MsgArray = [];\r\n      this.props.getMessageItem().forEach(function(item, index, array) {\r\n        MsgArray.push((<ToDoListChildItem useText={item}/>));\r\n      });\r\n      return MsgArray;\r\n    }\r\n\r\n    render(){\r\n        const classes = this.props.classes;\r\n        return(\r\n          <List component=\"nav\" aria-label=\"todo list\">\r\n            {this.renderItemProvider()}\r\n            {/* <ToDoListChildItem useText={\"Msg1\"}/>\r\n            <ToDoListChildItem useText={\"Msg2\"}/> */}\r\n          </List>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ToDoListItem)","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ToDoHeader from './ToDoHeader';\r\nimport ToDoAddForm from './ToDoAddForm';\r\nimport ToDoListItem from './ToDoListItem';\r\n\r\nconst useStyles = (theme) => ({\r\n    \r\n});\r\n\r\nclass ToDoView extends React.Component{    \r\n    constructor(props){\r\n        super(props);       \r\n    }\r\n    componentDidMount(){}\r\n    componentWillUnmount(){}\r\n    render(){\r\n        const classes = this.props.classes;\r\n        return(\r\n            [\r\n              <ToDoHeader/>,\r\n              <ToDoAddForm \r\n                onAddButtonClick={this.props.onAddButtonClick} \r\n                onAddTextChange = {this.props.onAddTextChange}\r\n              />,\r\n              <ToDoListItem getMessageItem={this.props.getMessageItem}/>\r\n            ]\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ToDoView)","import { ContactsOutlined, ThreeSixtySharp } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport ToDoView from '../ToDoComponent/ToDoView';\r\n\r\nclass ToDoController extends React.Component{    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            message : [],\r\n            temp : '',\r\n        }\r\n        this.onAddButtonClick = this.onAddButtonClick.bind(this);\r\n        this.onAddTextChange = this.onAddTextChange.bind(this);\r\n        this.getMessageItem = this.getMessageItem.bind(this);\r\n    }\r\n    componentDidMount(){}\r\n    componentWillUnmount(){}\r\n\r\n    onAddButtonClick(event){\r\n        this.state.message.push(this.state.temp);\r\n        this.setState({message:this.state.message});\r\n    }\r\n\r\n    onAddTextChange(event){\r\n        this.state.temp = event.target.value;\r\n    }\r\n\r\n    getMessageItem(){\r\n        return this.state.message;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <ToDoView\r\n                onAddButtonClick = {this.onAddButtonClick}\r\n                getMessageItem = {this.getMessageItem}\r\n                onAddTextChange = {this.onAddTextChange}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoController","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport ToDoController from './Controller/ToDoController';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <ToDoController/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}